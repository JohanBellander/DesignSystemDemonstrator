.container {
  padding: var(--spacing-md);
  max-width: 1400px;
  margin: 0 auto;
}

.section {
  margin-bottom: var(--spacing-4xl);
}

.subtitle {
  font-size: var(--font-size-2xl);
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin: 0 0 var(--spacing-sm) 0;
  letter-spacing: -0.02em;
}

.description {
  font-size: var(--font-size-base);
  color: var(--text-secondary);
  margin: 0 0 var(--spacing-xl) 0;
  line-height: var(--line-height-relaxed);
}

.description code {
  background: var(--color-primary-100);
  padding: 2px 6px;
  border-radius: var(--border-radius-sm);
  font-family: var(--font-family-monospace);
  font-size: 0.9em;
  color: var(--color-primary-700);
}

/* Status Card */
.statusCard {
  background: var(--surface-base);
  border: 1px solid var(--border-default);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-xl);
  box-shadow: var(--shadow-sm);
}

.statusTitle {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin: 0 0 var(--spacing-md) 0;
}

.statusGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-lg);
}

.statusItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-md);
  background: var(--background-secondary);
  border-radius: var(--border-radius-md);
}

.statusLabel {
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  font-weight: var(--font-weight-medium);
}

.statusValue {
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-semibold);
  padding: 4px 12px;
  border-radius: var(--border-radius-sm);
}

.statusValue.enabled {
  background: var(--color-success-100);
  color: var(--color-success-700);
}

.statusValue.disabled {
  background: var(--color-neutral-200);
  color: var(--color-neutral-600);
}

/* Animation Grid */
.animationGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: var(--spacing-lg);
}

.animationCard {
  background: var(--surface-base);
  border: 2px solid var(--border-default);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-lg);
  cursor: pointer;
  transition: all var(--transition-base);
  position: relative;
}

.animationCard:hover:not(.disabled) {
  border-color: var(--color-primary-500);
  box-shadow: var(--shadow-md);
  transform: translateY(-2px);
}

.animationCard.active {
  border-color: var(--color-primary-600);
  box-shadow: 0 0 0 3px var(--color-primary-100);
}

.animationCard.disabled {
  opacity: 0.4;
  cursor: not-allowed;
  background: var(--background-secondary);
}

.animationPreview {
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: var(--spacing-md);
  background: var(--background-secondary);
  border-radius: var(--border-radius-md);
  overflow: hidden;
}

.previewBox {
  width: 60px;
  height: 60px;
  background: var(--color-primary-500);
  border-radius: var(--border-radius-sm);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-xl);
}

.previewBox.animate {
  /* Animation classes will be applied dynamically from animations.module.css */
  animation-iteration-count: 1;
}

.animationInfo {
  text-align: center;
}

.animationName {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin: 0;
  text-transform: capitalize;
}

.notAllowed {
  display: block;
  font-size: var(--font-size-xs);
  color: var(--text-disabled);
  margin-top: 4px;
}

/* Intensity Comparison */
.intensityControls {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-xl);
}

.label {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--text-secondary);
}

.select {
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--border-default);
  border-radius: var(--border-radius-md);
  background: var(--surface-base);
  color: var(--text-primary);
  font-size: var(--font-size-base);
  cursor: pointer;
  transition: all var(--transition-base);
}

.select:hover {
  border-color: var(--color-primary-500);
}

.select:focus {
  outline: none;
  border-color: var(--color-primary-500);
  box-shadow: 0 0 0 3px var(--color-primary-100);
}

.intensityGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--spacing-xl);
}

.intensityCard {
  background: var(--surface-base);
  border: 1px solid var(--border-default);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-lg);
}

.intensityLabel {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin-bottom: var(--spacing-md);
}

.intensityPreview {
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--background-secondary);
  border-radius: var(--border-radius-md);
}

.intensityBox {
  padding: var(--spacing-lg) var(--spacing-xl);
  background: var(--color-primary-500);
  color: white;
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  cursor: pointer;
  user-select: none;
}

.intensityBox.hover {
  /* Animation will be applied via animation class from animations.module.css */
  cursor: pointer;
}

/* Interaction States */
.stateControls {
  display: flex;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-xl);
}

.stateButton {
  padding: var(--spacing-sm) var(--spacing-lg);
  background: var(--surface-base);
  border: 2px solid var(--border-default);
  border-radius: var(--border-radius-md);
  color: var(--text-secondary);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  cursor: pointer;
  transition: all var(--transition-base);
  text-transform: capitalize;
}

.stateButton:hover {
  border-color: var(--color-primary-500);
  color: var(--text-primary);
}

.stateButton.stateActive {
  background: var(--color-primary-500);
  border-color: var(--color-primary-500);
  color: white;
}

.stateDemo {
  display: flex;
  justify-content: center;
  padding: var(--spacing-4xl) var(--spacing-xl);
  background: var(--background-secondary);
  border-radius: var(--border-radius-lg);
}

.stateDemoBox {
  display: flex;
  align-items: center;
  justify-content: center;
}

.stateDemoElement {
  padding: var(--spacing-xl) var(--spacing-3xl);
  background: var(--color-primary-500);
  color: white;
  border-radius: var(--border-radius-lg);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  cursor: pointer;
  user-select: none;
}

.stateDemoElement[data-state="hover"]:hover {
  /* Animation applied via animation class from animations.module.css */
  transition: all var(--transition-base);
}

.stateDemoElement[data-state="active"]:active {
  /* Animation applied via animation class from animations.module.css */
  transition: all var(--transition-base);
}

.stateDemoElement[data-state="focus"]:focus {
  outline: none;
  /* Animation applied via class */
}

/* Component Examples */
.componentGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--spacing-2xl);
}

.componentExample {
  background: var(--surface-base);
  border: 1px solid var(--border-default);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-xl);
}

.componentTitle {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin: 0 0 var(--spacing-lg) 0;
}

.componentDemo {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
}

.demoCard {
  padding: var(--spacing-lg);
}

.demoCard p {
  margin: 0;
  color: var(--text-secondary);
  font-size: var(--font-size-sm);
}

/* Configuration Display */
.configCard {
  background: var(--color-neutral-900);
  border: 1px solid var(--color-neutral-700);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-xl);
  overflow: auto;
  max-height: 500px;
}

.configCode {
  margin: 0;
  font-family: var(--font-family-monospace);
  font-size: var(--font-size-sm);
  color: #a9b1d6;
  line-height: 1.6;
}

/* Accessibility Note */
.accessibilityNote {
  background: var(--color-info-50);
  border: 2px solid var(--color-info-200);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-xl);
}

.accessibilityTitle {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-info-700);
  margin: 0 0 var(--spacing-sm) 0;
}

.accessibilityText {
  margin: 0;
  font-size: var(--font-size-base);
  color: var(--color-info-800);
  line-height: var(--line-height-relaxed);
}

.accessibilityText code {
  background: var(--color-info-100);
  padding: 2px 6px;
  border-radius: var(--border-radius-sm);
  font-family: var(--font-family-monospace);
  font-size: 0.9em;
  color: var(--color-info-900);
}

/* Responsive Design */
@media (max-width: 768px) {
  .animationGrid {
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: var(--spacing-md);
  }

  .statusGrid {
    grid-template-columns: 1fr;
  }

  .intensityGrid {
    grid-template-columns: 1fr;
  }

  .componentGrid {
    grid-template-columns: 1fr;
  }

  .stateControls {
    flex-wrap: wrap;
  }
}
